#! /bin/bash

##  Copyright (c)  Alex Genovese   https://github.com/TuxVinyards

# 	licence:  GPL3   https://www.gnu.org/licenses 


## Settings file for 'quickemu-mod' & 'quickget-mod'   2023.02   late alpha / early beta 


  # Default location of the settings script is either "$HOME" or a userland VM folder where 'quickemu-mod' has been placed.


  # Using the home folder allows allows multiscript installation:

  # Q-Mod itself may be then installed next-to or instead-of standard quickemu in /usr/bin

  # &  also as one qmod script per VM folder which will then autoscan its current position for .conf files


  # Multiple settings files may also be used.  A file that is local to the qmod script will overide that located at $HOME


  # If using non-default locations or changing the filename, then the settings section of the main script must be edited. NB 


  # Adding a dot to the front of this settings filename will hide/tidy it away (ctrl-h to unhide/hide).

  # After the locations are established, settings may be opened (hidden or not) and edited from within mod scripts via a menu selector.

  # Adding a dot is recommended for any placement in the main $HOME folder


## SET quickemu version  

##  Works with any version of original 'quickemu'  

#   To edit quickemu version, use

#   https://github.com/quickemu-project/quickemu/releases/tag/4.4    etc

#   Paste the quickemu file from the zip into /usr/bin

#   OR place elsewhere with given path   



## SET THE DEFAULT VM FOLDER, where the Virtual Machines are normally found. 

# May be left blank if the main quickemu-mod script is already located there. 

# eg. Default_VM_Folder="/media/xxx/Files/VMQs"

# shellcheck disable=SC2034,SC2154   

Default_VM_Folder=

# A second & third may also be set:

Second_VM_Folder=

Third_VM_Folder=


#  GENERAL COLOR & THEMING  

X_Shade="3" 

#  Yellow 3 (recommended), Blue 4, Cyan 6 (brighter blue), Red 1

#  https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit


#  TEXT EDITOR  

#  Leave blank to use system defaults for editing the settings file, otherwise give "name" of a specific editor eg. gedit, pluma ... 

TextEditor=


if [[ $1 == "QMOD" ]] || [[ $1 == "QWRAP" ]] ; then

  # SET THE ASSOCIATIVE ARRAY with  ,0] as the discrete VM folder  &  ,1] as the .conf   

  # These VM's will show at the top of the list. Any others will list afterwards. 

  # eg:

  # VM_Array[0,0]="/media/xxx/Storage/VMQs" ; VM_Array[0,1]="windows-11.conf"

  # VM_Array[1,0]="/media/xxx/Storage/VMQs/Insider" ; VM_Array[1,1]="windows-11.conf"

  # VM_Array[2,0]="$Default_VM_Folder" ; VM_Array[2,1]="macos-catalina.conf"

  # Should be contigiuous, non-sparse
  

  #VM_Array[0,0]="/media/xxx/Files/VMQs" ; VM_Array[0,1]="windows-11.conf"

  #VM_Array[1,0]="/media/xxx/Files/VMQs/Insider" ; VM_Array[1,1]="windows-11.conf"

  #VM_Array[2,0]="/media/xxx/Files/VMQs" ; VM_Array[2,1]="macos-catalina.conf"



  # OPTIONS    (qmod only, not original quickemu)    


  VerboseArgs=                
  
  #  Set =1  to normally display the qemu args, with okay dialogue, in human readable & before booting.  

  #  Set blank for log file only. In menu toggle also available. (A log file is always outputted to the VM's main folder) 


  ExtraArgs=

  #  Extra QEMU Args may be added here, if normally required. Also add ad hoc via the main menu.

  #  A simpler and improved method is possible in the mod script than with the original one. 

  #  Format = "group quoted" with single-space separated elements eg:  ExtraArgs="-device tpm-tis,tpmdev=tpm0" 

  #  See  https://qemu.readthedocs.io/en/latest/system/invocation.html

  

  Extra_QE_Params=

  #  Extra quickemu parameters to be used at VM run time.  

  #  Format = "group quoted" with single-space separated elements eg:  Extra_QE_Params="--full-screen  --status-quo" 

  #  See quickemu --help for full list   NB  not all options can be applicable  CAUTION 

  #  Of note:  "--full-screen" only works with spice display ...   


  KVM_MSR_ModProbeFile="/etc/modprobe.d/kvm-quickemu.conf"

  # File for default KVM behaviour for unhandled machine-specific registers. ( REVIEW )
  
  # Edit here if your OS locates 'modprobe.d' differently.  QMOD default is "/etc/modprobe.d/kvm-quickemu.conf"


fi

if [[ $1 == "QWRAP" ]] ; then

  # Path to script folder:  Leave blank to use quickemu system defaults.  

  # Different versions maybe downloaded and stored in suggested format 'quickemu-42' 'quickemu-44'  etc

  # Use 'wget  https://github.com/quickemu-project/quickemu/archive/refs/tags/4.7.zip' etc from a terminal opened in the Script folder
  
  QE_ScriptFolder=              # eg  "/media/xxx/Files/VMQs/QE_ScriptFolder"  (no trailing slash)

  QE_Version=                   # eg  "quickemu-42"

fi


if [[ $1 == "QMOD" ]] ; then

  # See section 'WINDOWS & HYPERVISOR' in this script for more details.

  # NB Version 1 only   #  TODO  && wrap

  WinHyperV_RC=               #  Windows Hypervisor Recipe.  Leave blank for defaults.  Otherwise, set "4.2" or "Custom" 

  #                           #  Edit / create / uncomment as needed. NB comma separated, no spaces.

  if [[ $WinHyperV_RC == "4.2" ]]; then

    # Quickemu 4.2 (qemu ver 6.0) recipe (two lines):
    WinHyperV_RC="-cpu host,kvm=on,+hypervisor,+invtsc,l3-cache=on,migratable=no,hv_frequencies,kvm_pv_unhalt,hv_reenlightenment,"
    WinHyperV_RC+="hv_relaxed,hv_spinlocks=8191,hv_stimer,hv_synic,hv_time,hv_vapic,hv_vendor_id=1234567890ab,hv_vpindex"

  elif [[ $WinHyperV_RC == "Custom" ]]; then

    # Edit ... 
    WinHyperV_RC="-cpu host,kvm=on,+hypervisor,+invtsc,l3-cache=on,migratable=no,hv_frequencies,kvm_pv_unhalt,hv_reenlightenment,"
    WinHyperV_RC+="hv_relaxed,hv_spinlocks=8191,hv_stimer,hv_synic,hv_time,hv_vapic,hv_vendor_id=1234567890ab,hv_vpindex"

  else

    # Quickemu 4.3/4.4/4.5 etc recipe:

    WinHyperV_RC="-cpu host,kvm=on,+hypervisor,+invtsc,l3-cache=on,migratable=no,hv_passthrough"

    # From qemu docs hyperv ....  hv-passthrough overrides all other ‘hv-‘ settings on the command line. 
    # Also, enabling this flag effectively prevents migration as the list of enabled enlightenments may differ between target and destination hosts.

    # This above may account for VM's built with quickemu 4.2 not working with 4.3  ... ?  YMMV

    # https://www.qemu.org/docs/master/system/i386/hyperv.html

  fi

  ## DRIVE TRIM & HARDWARE
  
  # As noted in my comment https://github.com/quickemu-project/quickemu/issues/572#issuecomment-1313723715

  # Qemu itself seems to automatically add TRIM to the virtual drive ie "discard=unmap"

  # Ver 4.4 of quickemu added this as an instuction to the 'else' section which was picked up on by windows

  # BUT it also changed the drive from blk to scsi. This is the change that caused the problems, not the unmap.

  # @ 2023-05 following comment https://github.com/quickemu-project/quickemu/issues/572#issuecomment-1530824872

  # it seemed right, for completeness, to add some more options to this section.

  ## Windows & All non-specified OS's 

  IgnoreTRIM=      #  Set =1  to not send the unmap command to Qemu  (although it's probably done internally anyway)

  ## All non-specified OS's  But NOT Windows. In qmod this set as 'virtio-blk' to avoid the 4.4 problems

  Default_SCSI=    #  If not specified, will use 'virtio-blk' as per ver 4.3 & 4.5 etc   Set =1 to use SCSI as 4.4.

fi


## End of Settings
